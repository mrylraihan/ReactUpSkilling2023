{"ast":null,"code":"var _jsxFileName = \"/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section10SideEffectsPart4(NewUseContextp2)/06-usereducer-starting-project/src/store/auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  // we are passing an empty function because we arent gonna use it anyway this is just for the auto complete when we try to access the context in our components \n  onLogout: () => {},\n  onLogin: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogin: loginHandler,\n      onLogout: logoutHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","AuthContextProvider","props","setIsLoggedIn","loginHandler","email","password","localStorage","setItem","logoutHandler","removeItem","children"],"sources":["/Volumes/External SSD/CodingSpace/ReactCourseUpSkilling/Section10SideEffectsPart4(NewUseContextp2)/06-usereducer-starting-project/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst AuthContext = React.createContext({\n    isLoggedIn:false, \n    // we are passing an empty function because we arent gonna use it anyway this is just for the auto complete when we try to access the context in our components \n    onLogout:()=>{}, \n    onLogin:()=>{}\n});\n\n\nexport const AuthContextProvider = (props)=>{\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\n    const loginHandler = (email, password) => {\n        // We should of course check email and password\n        // But it's just a dummy/ demo anyways\n        localStorage.setItem('isLoggedIn', '1');\n        setIsLoggedIn(true);\n    };\n\n    const logoutHandler = () => {\n        localStorage.removeItem('isLoggedIn');\n        setIsLoggedIn(false);\n    };\n\n    return <AuthContext.Provider value={{ isLoggedIn: isLoggedIn, onLogin: loginHandler, onLogout: logoutHandler }}>{props.children}</AuthContext.Provider>\n}\n\nexport default AuthContext"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAEvC,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAa,CAAC;EACpCC,UAAU,EAAC,KAAK;EAChB;EACAC,QAAQ,EAAC,MAAI,CAAC,CAAC;EACfC,OAAO,EAAC,MAAI,CAAC;AACjB,CAAC,CAAC;AAGF,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAG;EAAA;EACxC,MAAM,CAACJ,UAAU,EAAEK,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAGnD,MAAMS,YAAY,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACtC;IACA;IACAC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IACvCL,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMM,aAAa,GAAG,MAAM;IACxBF,YAAY,CAACG,UAAU,CAAC,YAAY,CAAC;IACrCP,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEL,UAAU,EAAEA,UAAU;MAAEE,OAAO,EAAEI,YAAY;MAAEL,QAAQ,EAAEU;IAAc,CAAE;IAAA,UAAEP,KAAK,CAACS;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAC3J,CAAC;AAAA,GAjBYV,mBAAmB;AAAA,KAAnBA,mBAAmB;AAmBhC,eAAeL,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}